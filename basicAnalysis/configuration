// system/blockMeshDict
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// Create a wind tunnel domain (all dimensions in meters)
convertToMeters 1;

vertices
(
    (-2 -2 -2)  // vertex 0
    ( 4 -2 -2)  // vertex 1
    ( 4  2 -2)  // vertex 2
    (-2  2 -2)  // vertex 3
    (-2 -2  2)  // vertex 4
    ( 4 -2  2)  // vertex 5
    ( 4  2  2)  // vertex 6
    (-2  2  2)  // vertex 7
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (60 40 40) simpleGrading (1 1 1)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (1 5 6 2)
        );
    }
    walls
    {
        type wall;
        faces
        (
            (0 1 2 3)  // bottom
            (4 5 6 7)  // top
            (0 1 5 4)  // side1
            (3 2 6 7)  // side2
        );
    }
);

// 0/U - Initial velocity conditions
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (10 0 0);

boundaryField
{
    inlet
    {
        type            fixedValue;
        value           uniform (10 0 0);
    }
    outlet
    {
        type            zeroGradient;
    }
    walls
    {
        type            noSlip;
    }
    drone
    {
        type            noSlip;
    }
}

// 0/p - Pressure conditions
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    object      p;
}

dimensions      [0 2 -2 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    inlet
    {
        type            zeroGradient;
    }
    outlet
    {
        type            fixedValue;
        value           uniform 0;
    }
    walls
    {
        type            zeroGradient;
    }
    drone
    {
        type            zeroGradient;
    }
}

// system/controlDict - Basic simulation controls
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}

application     simpleFoam;

startFrom       startTime;
startTime       0;
stopAt          endTime;
endTime         1000;
deltaT          1;
writeControl    timeStep;
writeInterval   100;

purgeWrite      0;
writeFormat     ascii;
writePrecision  6;
writeCompression off;

timeFormat      general;
timePrecision   6;
runTimeModifiable true;

// system/snappyHexMeshDict - Basic mesh settings
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}

mergeTolerance 1e-6;

castellatedMesh true;
snap            true;
addLayers       true;

geometry
{
    drone.stl
    {
        type triSurfaceMesh;
        file "drone.stl";
        name drone;
    }
}

castellatedMeshControls
{
    maxLocalCells   100000;
    maxGlobalCells  2000000;
    minRefinementCells 10;
    maxLoadUnbalance 0.1;
    nCellsBetweenLevels 3;

    features
    (
    );

    refinementSurfaces
    {
        drone
        {
            level (0 2);
        }
    }

    resolveFeatureAngle 30;
    locationInMesh (0 0 0);
    allowFreeStandingZoneFaces true;
}

snapControls
{
    nSmoothPatch 3;
    tolerance 4.0;
    nSolveIter 30;
    nRelaxIter 5;
}

addLayersControls
{
    relativeSizes true;
    layers
    {
        drone
        {
            nSurfaceLayers 3;
        }
    }
    expansionRatio 1.2;
    finalLayerThickness 0.3;
    minThickness 0.1;
    nGrow 0;
}

meshQualityControls
{
    maxNonOrtho 65;
    maxBoundarySkewness 20;
    maxInternalSkewness 4;
    maxConcave 80;
    minVol 1e-13;
    minTetQuality 1e-15;
    minArea -1;
    minTwist 0.02;
    minDeterminant 0.001;
    minFaceWeight 0.05;
    minVolRatio 0.01;
    minTriangleTwist -1;
    nSmoothScale 4;
    errorReduction 0.75;
}
